version: '3'

services:

  traefik:
    env_file: ${ROOT_DIR}/.env
    container_name: traefik
    image: traefik
    command: --docker --docker.watch --docker.domain=${ANONDNS} --logLevel=DEBUG
    networks:
      - traefik_public
      - auth_internal
    ports:
        # As we're using Traefik as a revers proxy it's only this container
        # that will actually need to expose any ports.
        # [[remote_ip:]remote_port[-remote_port]:]port[/protocol]
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro  # allow traefik to monitor container status
      - ${ROOT_DIR}/services/traefik:/etc/traefik  # mount configs
    labels:
      - "trafeik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.frontend.rule=Host:${ANONDNS}; PathPrefixStrip: /traefik"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_public"

  openldap:
    # image: osixia/openldap
    container_name: ldap
    build:
      context: ${ROOT_DIR}/services/openldap
      dockerfile: Dockerfile
    env_file: ${ROOT_DIR}/services/openldap/openldap.env
    environment:
      # /etc/localtime fails on MacOS due to known bugs
      # https://github.com/docker/for-mac/issues/2396#issuecomment-444903734
      # https://github.com/docker/for-mac/issues/2396#issuecomment-446515510
      # It's also missing from RancherOS https://github.com/rancher/os/issues/2218
      # so we'll create a local environment variable:
      #   export ETC_LOCALTIME=$(readlink /etc/localtime)
      #   export LOCALTZ=$(echo $(readlink /etc/localtime) | awk -F'\/' '{print $6"/"$7}')
      # This essentially becomes a string of type Europe/London (for example)
      - TZ=${LOCALTZ}
    networks:
      - traefik_public
      - auth_internal

  keycloak:
    container_name: keycloak
    build:
      context: ${ROOT_DIR}/services/keycloak
      dockerfile: Dockerfile
    env_file: ${ROOT_DIR}/services/keycloak/keycloak.env
    environment:
      - TZ=${LOCALTZ}
    networks:
      - traefik_public
    labels:
      - "trafeik.enable=true"
      - "traefik.backend=keycloak"
      # Auth
      - "traefik.frontend.rule=Host:${ANONDNS}; PathPrefix: /auth"
      - "traefik.port=8080"
      - "trafeik.docker.network=traefik_public"
  keycloak-db:
    container_name: keycloak_db
    env_file: ${ROOT_DIR}/services/keycloak/keycloak.env
    environment:
      - TZ=${LOCALTZ}
    image: postgres:10.1
    networks:
      - traefik_public
  keycloak-db-backup:
    container_name: keycloak_backup
    env_file: ${ROOT_DIR}/services/keycloak/keycloak-backup.env
    environment:
      - TZ=${LOCALTZ}
    image: postgres:10.1
    entrypoint: |
      bash -c 'bash -s <<EOF
      trap "break;exit" SIGHUP SIGINT SIGTERM
      sleep 2m
      while /bin/true; do
        pg_dump -Fc > /dump/dump_\`date +%d-%m-%Y"_"%H_%M_%S\`.psql
        (ls -t /dump/dump*.psql|head -n $$BACKUP_NUM_KEEP;ls /dump/dump*.psql)|sort|uniq -u|xargs rm -- {}
        sleep $$BACKUP_FREQUENCY
      done
      EOF'
    networks:
      - traefik_public

  ipupdater:
    container_name: dyndns
    build:
      context: ${ROOT_DIR}/services/ipupdater
      dockerfile: Dockerfile
    environment:
      - ANONDNS=${ANONDNS}
      - TOKEN=${TOKEN}

networks:
  # Used to expose openldap to keycloak
  traefik_public:
    external: true

  # Used to expose openldap to other apps which want to talk to LDAP
  auth_internal:
    external: true