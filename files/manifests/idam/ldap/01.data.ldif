# Root
dn: dc=jamesveitch,dc=dev
objectclass: top
objectclass: dcObject
objectclass: organization
o: James Veitch
dc: jamesveitch

# OUs
dn: ou=People,dc=jamesveitch,dc=dev
objectclass: top
objectclass: organizationalUnit
ou: People
description: LDAP tree where users are

dn: ou=Groups,dc=jamesveitch,dc=dev
objectclass: top
objectclass: organizationalUnit
ou: Groups
description: LDAP tree for Groups that users belong to

dn: ou=RealmRoles,ou=Groups,dc=jamesveitch,dc=dev
objectclass: top
objectclass: organizationalUnit
ou: RealmRoles
description: Keycloak roles that users have

dn: ou=KubernetesRoles,ou=Groups,dc=jamesveitch,dc=dev
objectclass: top
objectclass: organizationalUnit
ou: KubernetesRoles
description: Kubernetes roles that users have

# People
dn: uid=jamesveitch,ou=People,dc=jamesveitch,dc=dev
objectclass: top
objectclass: person
objectclass: organizationalPerson
objectclass: inetOrgPerson
uid: jamesveitch
cn: James
sn: Veitch
userPassword: {CRYPT}$6$VnaZp1/J$Mqriua0dwao2Zm5aKNoIZUyA3d/BJ1vPRkGqi8KPWEZrFr2HAiZFurnLZpQtw4lJfcspYzFh0d3HVWCsdE7Q..

# Realm Mapped Groups
# (add these as a special mapper and keycloak auto-identifies)
dn: cn=ldap-user,ou=RealmRoles,ou=Groups,dc=jamesveitch,dc=dev
objectclass: top
objectclass: groupOfNames
cn: ldap-user
member: uid=jamesveitch,ou=People,dc=jamesveitch,dc=dev
description: Standard group for all ldap users. Sits inside `RealmRoles` OU and implemented in Keycloak as a `role-ldap-mapper`.

dn: cn=ldap-admin,ou=RealmRoles,ou=Groups,dc=jamesveitch,dc=dev
objectclass: top
objectclass: groupOfNames
cn: ldap-admin
member: uid=jamesveitch,ou=People,dc=jamesveitch,dc=dev
description: Holds general administrators for the domain. Sits inside `RealmRoles` OU and implemented in Keycloak as a `role-ldap-mapper`.

dn: cn=realm-admin,ou=RealmRoles,ou=Groups,dc=jamesveitch,dc=dev
objectclass: top
objectclass: groupOfNames
cn: realm-admin
member: uid=jamesveitch,ou=People,dc=jamesveitch,dc=dev
description: Admin for Keycloak and LDAP. Sits inside `RealmRoles` OU and implemented in Keycloak as a `role-ldap-mapper`.

# Groups
# (standard groups fulled through as ldap-group-mapper)
dn: cn=cluster-admin,ou=KubernetesRoles,ou=Groups,dc=jamesveitch,dc=dev
objectclass: top
objectclass: groupOfNames
cn: cluster-admin
member: uid=jamesveitch,ou=People,dc=jamesveitch,dc=dev
description: Admin for the Kubernetes Cluster. Sits inside `KubernetesRoles` OU.